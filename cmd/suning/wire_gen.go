// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/koolalex/baozi/internal/app/suning"
	"github.com/koolalex/baozi/internal/app/suning/launch"
	"github.com/koolalex/baozi/internal/pkg/app"
	"github.com/koolalex/baozi/internal/pkg/config"
	"github.com/koolalex/baozi/internal/pkg/log"
)

// Injectors from wire.go:

func CreateApp(cf string) (*app.Application, error) {
	viper, err := config.New(cf)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(options)
	if err != nil {
		return nil, err
	}
	suningOptions, err := suning.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	launcher := launch.NewAppLauncher(logger)
	application, err := suning.NewApp(suningOptions, logger, launcher)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, log.ProviderSet, launch.ProviderSet, suning.ProviderSet)
